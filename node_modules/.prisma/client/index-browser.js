
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.18.0
 * Query Engine version: 4c784e32044a8a016d99474bd02a3b6123742169
 */
Prisma.prismaVersion = {
  client: "5.18.0",
  engine: "4c784e32044a8a016d99474bd02a3b6123742169"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  uid: 'uid',
  name: 'name',
  email: 'email',
  defaultTenantUserId: 'defaultTenantUserId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TenantScalarFieldEnum = {
  id: 'id',
  name: 'name',
  website: 'website',
  logo: 'logo',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TenantUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  tenantId: 'tenantId',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TenantOrgScalarFieldEnum = {
  id: 'id',
  name: 'name',
  parentId: 'parentId',
  tenantId: 'tenantId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TenantOrgUserScalarFieldEnum = {
  tenantOrgId: 'tenantOrgId',
  tenantUserId: 'tenantUserId',
  permission: 'permission',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentConfigScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  fieldConfig: 'fieldConfig',
  tenantId: 'tenantId',
  isPrimary: 'isPrimary',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  image: 'image',
  documentConfigId: 'documentConfigId',
  templateFieldConfig: 'templateFieldConfig',
  tenantId: 'tenantId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TenantOrgDocScalarFieldEnum = {
  tenantOrgId: 'tenantOrgId',
  documentTemplateId: 'documentTemplateId',
  permission: 'permission',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  uid: 'uid',
  documentTemplateId: 'documentTemplateId',
  tenantId: 'tenantId',
  tenantOrgId: 'tenantOrgId',
  documentFields: 'documentFields',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MTICScalarFieldEnum = {
  id: 'id',
  uid: 'uid',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MTPLogScalarFieldEnum = {
  id: 'id',
  mticId: 'mticId',
  mticSessionId: 'mticSessionId',
  action: 'action',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MTICReaderScalarFieldEnum = {
  id: 'id',
  isActive: 'isActive',
  tenantId: 'tenantId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MTICSessionScalarFieldEnum = {
  id: 'id',
  mticReaderId: 'mticReaderId',
  tenantUserId: 'tenantUserId',
  lat: 'lat',
  lon: 'lon',
  startDateTime: 'startDateTime',
  endDateTime: 'endDateTime',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MTICDocumentScalarFieldEnum = {
  id: 'id',
  mticId: 'mticId',
  mticSessionId: 'mticSessionId',
  mTPLogId: 'mTPLogId',
  documentId: 'documentId',
  isPrimary: 'isPrimary',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentTemplateFileScalarFieldEnum = {
  id: 'id',
  documentTemplateId: 'documentTemplateId',
  fileId: 'fileId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentFileScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  fileId: 'fileId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MTICDocumentFileScalarFieldEnum = {
  id: 'id',
  mticDocumentId: 'mticDocumentId',
  fileId: 'fileId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MTICFileScalarFieldEnum = {
  id: 'id',
  mticId: 'mticId',
  fileId: 'fileId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FileScalarFieldEnum = {
  id: 'id',
  name: 'name',
  fileName: 'fileName',
  blobName: 'blobName',
  containerName: 'containerName',
  blobUrl: 'blobUrl',
  contentType: 'contentType',
  fileSize: 'fileSize',
  tenantid: 'tenantid',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PublishedDocumentScalarFieldEnum = {
  id: 'id',
  uid: 'uid',
  mticId: 'mticId',
  documentJson: 'documentJson',
  createdById: 'createdById',
  ownerId: 'ownerId',
  createdAt: 'createdAt'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  name: 'name',
  pictureId: 'pictureId',
  email: 'email',
  bio: 'bio',
  companyId: 'companyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  website: 'website',
  industry: 'industry',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReaderScalarFieldEnum = {
  address: 'address',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LocationScalarFieldEnum = {
  id: 'id',
  lat: 'lat',
  lon: 'lon',
  formattedAddress: 'formattedAddress'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  uid: 'uid',
  name: 'name',
  brand: 'brand',
  description: 'description',
  imagePath: 'imagePath',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById',
  createdLocationId: 'createdLocationId',
  createdReaderId: 'createdReaderId'
};

exports.Prisma.TagHistoryScalarFieldEnum = {
  id: 'id',
  tagId: 'tagId',
  createdById: 'createdById',
  createdAt: 'createdAt',
  createdLocationId: 'createdLocationId',
  createdReaderId: 'createdReaderId',
  action: 'action'
};

exports.Prisma.FilesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  fileName: 'fileName',
  blobName: 'blobName',
  containerName: 'containerName',
  blobUrl: 'blobUrl',
  contentType: 'contentType',
  fileSize: 'fileSize',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  administrator: 'administrator',
  manager: 'manager',
  individual: 'individual'
};

exports.Permission = exports.$Enums.Permission = {
  read: 'read',
  write: 'write',
  delete: 'delete'
};

exports.Action = exports.$Enums.Action = {
  register: 'register',
  search: 'search',
  document: 'document'
};

exports.Industry = exports.$Enums.Industry = {
  food: 'food',
  pharmaceutical: 'pharmaceutical',
  automotive: 'automotive',
  luxuryConsumerGoods: 'luxuryConsumerGoods',
  other: 'other'
};

exports.TagAction = exports.$Enums.TagAction = {
  created: 'created',
  searched: 'searched',
  updated: 'updated',
  deleted: 'deleted'
};

exports.Prisma.ModelName = {
  User: 'User',
  Tenant: 'Tenant',
  TenantUser: 'TenantUser',
  TenantOrg: 'TenantOrg',
  TenantOrgUser: 'TenantOrgUser',
  DocumentConfig: 'DocumentConfig',
  DocumentTemplate: 'DocumentTemplate',
  TenantOrgDoc: 'TenantOrgDoc',
  Document: 'Document',
  MTIC: 'MTIC',
  MTPLog: 'MTPLog',
  MTICReader: 'MTICReader',
  MTICSession: 'MTICSession',
  MTICDocument: 'MTICDocument',
  DocumentTemplateFile: 'DocumentTemplateFile',
  DocumentFile: 'DocumentFile',
  MTICDocumentFile: 'MTICDocumentFile',
  MTICFile: 'MTICFile',
  File: 'File',
  PublishedDocument: 'PublishedDocument',
  Profile: 'Profile',
  Company: 'Company',
  Reader: 'Reader',
  Location: 'Location',
  Tag: 'Tag',
  TagHistory: 'TagHistory',
  Files: 'Files'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
